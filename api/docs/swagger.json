{
  "swagger": "2.0",
  "info": {
    "description": "This is the documentation for the User API.",
    "version": "1.0.0",
    "title": "Swagger User API"
  },
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List all Users",
        "operationId": "listAll",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create one Users",
        "operationId": "createOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The component to create.",
            "schema": {
              "$ref": "#/definitions/UserWithPassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "409": {
            "description": "User has already been create earlier"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List one User",
        "operationId": "listOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "fields that need to be updated",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update User",
        "operationId": "updateOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "One or more fields to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successful updated"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete User",
        "operationId": "removeOne",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted, even if it doesn't existed before"
          }
        }
      }
    },
    "/users/{username}/changePassword": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Change User's Password",
        "operationId": "changePassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user that needs to change password",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Old and New Passwords",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User is updated with new password"
          },
          "401": {
            "description": "The password provided is invalid"
          },
          "500": {
            "description": "Something went wrong when trying to persist user"
          }
        }
      }
    },
    "/users/{username}/checkAuthenticity": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Check User's Authenticity",
        "operationId": "checkAuthenticity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "The user that needs to change password",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "description": "Old and New Passwords",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User is authentic"
          },
          "401": {
            "description": "User/Password is invalid"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      }
    },
    "UserWithPassword": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "ChangePassword": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    }
  }
}